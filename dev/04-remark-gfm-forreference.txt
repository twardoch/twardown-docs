Token Usage:
GitHub Tokens: 27875
LLM Input Tokens: 0
LLM Output Tokens: 0
Total Tokens: 27875

FileTree:
.github/workflows/bb.yml
.github/workflows/main.yml
.gitignore
index.d.ts
index.js
lib/index.js
package.json
readme.md
test/fixtures/autolink-literal/input.md
test/fixtures/autolink-literal/output.md
test/fixtures/autolink-literal/tree.json
test/fixtures/strikethrough-default/input.md
test/fixtures/strikethrough-default/output.md
test/fixtures/strikethrough-default/tree.json
test/fixtures/strikethrough-not-one/config.json
test/fixtures/strikethrough-not-one/input.md
test/fixtures/strikethrough-not-one/output.md
test/fixtures/strikethrough-not-one/tree.json
test/fixtures/table-no-align/config.json
test/fixtures/table-no-align/input.md
test/fixtures/table-no-align/tree.json
test/fixtures/table-no-padding/config.json
test/fixtures/table-no-padding/input.md
test/fixtures/table-no-padding/output.md
test/fixtures/table-no-padding/tree.json
test/fixtures/table-string-length/config.json
test/fixtures/table-string-length/input.md
test/fixtures/table-string-length/output.md
test/fixtures/table-string-length/tree.json
test/fixtures/table/input.md
test/fixtures/table/output.md
test/fixtures/table/tree.json
test/fixtures/tasklist/input.md
test/fixtures/tasklist/output.md
test/fixtures/tasklist/tree.json
test/index.js
tsconfig.json

Analysis:
.github/workflows/bb.yml
```.yml
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: unifiedjs/beep-boop-beta@main
        with:
          repo-token: ${{secrets.GITHUB_TOKEN}}
name: bb
on:
  issues:
    types: [closed, edited, labeled, opened, reopened, unlabeled]
  pull_request_target:
    types: [closed, edited, labeled, opened, reopened, unlabeled]

```
.github/workflows/main.yml
```.yml
jobs:
  main:
    name: ${{matrix.node}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node}}
      - run: npm install
      - run: npm test
      - uses: codecov/codecov-action@v5
    strategy:
      matrix:
        node:
          - lts/hydrogen
          - node
name: main
on:
  - pull_request
  - push

```
.gitignore
```.gitignore
*.d.ts
*.log
*.map
*.tsbuildinfo
.DS_Store
coverage/
node_modules/
yarn.lock
!/index.d.ts

```
index.d.ts
```.ts
import type {Options as MicromarkOptions} from 'micromark-extension-gfm'
import type {Options as MdastOptions} from 'mdast-util-gfm'

export {default} from './lib/index.js'

/**
 * Configuration for `remark-gfm`.
 *
 * Currently supports `singleTilde` as a parse option and
 * `firstLineBlank`, `stringLength`, `tableCellPadding`, and `tablePipeAlign`
 * as serialization options.
 */
export interface Options extends MicromarkOptions, MdastOptions {}

```
index.js
```.js
// Note: types exposed from `index.d.ts`.
export {default} from './lib/index.js'

```
lib/index.js
```.js
/**
 * @import {Root} from 'mdast'
 * @import {Options} from 'remark-gfm'
 * @import {} from 'remark-parse'
 * @import {} from 'remark-stringify'
 * @import {Processor} from 'unified'
 */

import {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'
import {gfm} from 'micromark-extension-gfm'

/** @type {Options} */
const emptyOptions = {}

/**
 * Add support GFM (autolink literals, footnotes, strikethrough, tables,
 * tasklists).
 *
 * @param {Options | null | undefined} [options]
 *   Configuration (optional).
 * @returns {undefined}
 *   Nothing.
 */
export default function remarkGfm(options) {
  // @ts-expect-error: TS is wrong about `this`.
  // eslint-disable-next-line unicorn/no-this-assignment
  const self = /** @type {Processor<Root>} */ (this)
  const settings = options || emptyOptions
  const data = self.data()

  const micromarkExtensions =
    data.micromarkExtensions || (data.micromarkExtensions = [])
  const fromMarkdownExtensions =
    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])
  const toMarkdownExtensions =
    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])

  micromarkExtensions.push(gfm(settings))
  fromMarkdownExtensions.push(gfmFromMarkdown())
  toMarkdownExtensions.push(gfmToMarkdown(settings))
}

```
package.json
```.json
{
  "author": "Titus Wormer <tituswormer@gmail.com> (https://wooorm.com)",
  "bugs": "https://github.com/remarkjs/remark-gfm/issues",
  "contributors": [
    "Titus Wormer <tituswormer@gmail.com> (https://wooorm.com)"
  ],
  "dependencies": {
    "@types/mdast": "^4.0.0",
    "mdast-util-gfm": "^3.0.0",
    "micromark-extension-gfm": "^3.0.0",
    "remark-parse": "^11.0.0",
    "remark-stringify": "^11.0.0",
    "unified": "^11.0.0"
  },
  "description": "remark plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists)",
  "devDependencies": {
    "@types/node": "^22.0.0",
    "c8": "^10.0.0",
    "is-hidden": "^2.0.0",
    "prettier": "^3.0.0",
    "remark": "^15.0.0",
    "remark-cli": "^12.0.0",
    "remark-preset-wooorm": "^11.0.0",
    "string-width": "^6.0.0",
    "to-vfile": "^8.0.0",
    "type-coverage": "^2.0.0",
    "typescript": "^5.0.0",
    "xo": "^0.60.0"
  },
  "exports": "./index.js",
  "files": [
    "index.d.ts",
    "index.js",
    "lib/"
  ],
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/unified"
  },
  "keywords": [
    "autolink",
    "footnote",
    "gfm",
    "github",
    "markdown",
    "mdast",
    "plugin",
    "remark",
    "remark-plugin",
    "strikethrough",
    "table",
    "tasklist",
    "unified"
  ],
  "license": "MIT",
  "name": "remark-gfm",
  "prettier": {
    "bracketSpacing": false,
    "singleQuote": true,
    "semi": false,
    "tabWidth": 2,
    "trailingComma": "none",
    "useTabs": false
  },
  "remarkConfig": {
    "plugins": [
      "remark-preset-wooorm"
    ]
  },
  "repository": "remarkjs/remark-gfm",
  "scripts": {
    "build": "tsc --build --clean && tsc --build && type-coverage",
    "format": "remark . --frail --output --quiet && prettier . --log-level warn --write && xo --fix",
    "prepack": "npm run build && npm run format",
    "test": "npm run build && npm run format && npm run test-coverage",
    "test-api": "node --conditions development test/index.js",
    "test-coverage": "c8 --100 --reporter lcov npm run test-api"
  },
  "sideEffects": false,
  "typeCoverage": {
    "atLeast": 100,
    "strict": true
  },
  "type": "module",
  "version": "4.0.1",
  "xo": {
    "overrides": [
      {
        "files": [
          "**/*.d.ts"
        ],
        "rules": {
          "@typescript-eslint/array-type": [
            "error",
            {
              "default": "generic"
            }
          ],
          "@typescript-eslint/ban-types": [
            "error",
            {
              "extendDefaults": true
            }
          ],
          "@typescript-eslint/consistent-type-definitions": [
            "error",
            "interface"
          ]
        }
      },
      {
        "files": [
          "test/**/*.js"
        ],
        "rules": {
          "no-await-in-loop": "off"
        }
      }
    ],
    "prettier": true,
    "rules": {
      "logical-assignment-operators": "off"
    }
  }
}

```
readme.md
# remark-gfm

[![Build][build-badge]][build]
[![Coverage][coverage-badge]][coverage]
[![Downloads][downloads-badge]][downloads]
[![Size][size-badge]][size]
[![Sponsors][sponsors-badge]][collective]
[![Backers][backers-badge]][collective]
[![Chat][chat-badge]][chat]

**[remark][]** plugin to support [GFM][] (autolink literals, footnotes,
strikethrough, tables, tasklists).

## Contents

* [What is this?](#what-is-this)
* [When should I use this?](#when-should-i-use-this)
* [Install](#install)
* [Use](#use)
* [API](#api)
  * [`unified().use(remarkGfm[, options])`](#unifieduseremarkgfm-options)
  * [`Options`](#options)
* [Examples](#examples)
  * [Example: `singleTilde`](#example-singletilde)
  * [Example: `stringLength`](#example-stringlength)
* [Bugs](#bugs)
* [Authoring](#authoring)
* [HTML](#html)
* [CSS](#css)
* [Syntax](#syntax)
* [Syntax tree](#syntax-tree)
* [Types](#types)
* [Compatibility](#compatibility)
* [Security](#security)
* [Related](#related)
* [Contribute](#contribute)
* [License](#license)

## What is this?

This package is a [unified][] ([remark][]) plugin to enable the extensions to
markdown that GitHub adds with GFM: autolink literals (`www.x.com`), footnotes
(`[^1]`), strikethrough (`~~stuff~~`), tables (`| cell |…`), and tasklists
(`* [x]`).
You can use this plugin to add support for parsing and serializing them.
These extensions by GitHub to CommonMark are called [GFM][] (GitHub Flavored
Markdown).

This plugin does not handle how markdown is turned to HTML.
That’s done by [`remark-rehype`][remark-rehype].
If your content is not in English and uses footnotes, you should configure that
plugin.
When generating HTML, you might also want to enable [`rehype-slug`][rehype-slug]
to add `id`s on headings.

A different plugin, [`remark-frontmatter`][remark-frontmatter], adds support for
frontmatter.
GitHub supports YAML frontmatter for files in repos and Gists but they don’t
treat it as part of GFM.

Another plugin, [`remark-github`][remark-github], adds support for how markdown
works in relation to a certain GitHub repo in comments, issues, PRs, and
releases, by linking references to commits, issues, and users.

Yet another plugin, [`remark-breaks`][remark-breaks], turns soft line endings
(enters) into hard breaks (`<br>`s).
GitHub does this in a few places (comments, issues, PRs, and releases).

## When should I use this?

This project is useful when you want to support the same features that GitHub
does in files in a repo, Gists, and several other places.
Users frequently believe that some of these extensions, specifically autolink
literals and tables, are part of normal markdown, so using `remark-gfm` will
help match your implementation to their understanding of markdown.
There are several edge cases where GitHub’s implementation works in unexpected
ways or even different than described in their spec, so *writing* in GFM is not
always the best choice.

If you *just* want to turn markdown into HTML (with maybe a few extensions such
as GFM), we recommend [`micromark`][micromark] with
[`micromark-extension-gfm`][micromark-extension-gfm] instead.
If you don’t use plugins and want to access the syntax tree, you can use
[`mdast-util-from-markdown`][mdast-util-from-markdown] with
[`mdast-util-gfm`][mdast-util-gfm].

## Install

This package is [ESM only][esm].
In Node.js (version 16+), install with [npm][]:

```sh
npm install remark-gfm
```

In Deno with [`esm.sh`][esmsh]:

```js
import remarkGfm from 'https://esm.sh/remark-gfm@4'
```

In browsers with [`esm.sh`][esmsh]:

```html
<script type="module">
  import remarkGfm from 'https://esm.sh/remark-gfm@4?bundle'
</script>
```

## Use

Say our document `example.md` contains:

```markdown
# GFM

## Autolink literals

www.example.com, https://example.com, and contact@example.com.

## Footnote

A note[^1]

[^1]: Big note.

## Strikethrough

~one~ or ~~two~~ tildes.

## Table

| a | b  |  c |  d  |
| - | :- | -: | :-: |

## Tasklist

* [ ] to do
* [x] done
```

…and our module `example.js` contains:

```js
import rehypeStringify from 'rehype-stringify'
import remarkGfm from 'remark-gfm'
import remarkParse from 'remark-parse'
import remarkRehype from 'remark-rehype'
import {read} from 'to-vfile'
import {unified} from 'unified'

const file = await unified()
  .use(remarkParse)
  .use(remarkGfm)
  .use(remarkRehype)
  .use(rehypeStringify)
  .process(await read('example.md'))

console.log(String(file))
```

…then running `node example.js` yields:

```html
<h1>GFM</h1>
<h2>Autolink literals</h2>
<p><a href="http://www.example.com">www.example.com</a>, <a href="https://example.com">https://example.com</a>, and <a href="mailto:contact@example.com">contact@example.com</a>.</p>
<h2>Footnote</h2>
<p>A note<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref aria-describedby="footnote-label">1</a></sup></p>
<h2>Strikethrough</h2>
<p><del>one</del> or <del>two</del> tildes.</p>
<h2>Table</h2>
<table>
<thead>
<tr>
<th>a</th>
<th align="left">b</th>
<th align="right">c</th>
<th align="center">d</th>
</tr>
</thead>
</table>
<h2>Tasklist</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" disabled> to do</li>
<li class="task-list-item"><input type="checkbox" checked disabled> done</li>
</ul>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-1">
<p>Big note. <a href="#user-content-fnref-1" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
</ol>
</section>
```

## API

This package exports no identifiers.
The default export is [`remarkGfm`][api-remark-gfm].

### `unified().use(remarkGfm[, options])`

Add support GFM (autolink literals, footnotes, strikethrough, tables,
tasklists).

###### Parameters

* `options` ([`Options`][api-options], optional)
  — configuration

###### Returns

Nothing (`undefined`).

### `Options`

Configuration (TypeScript type).

###### Fields

* `firstLineBlank` (`boolean`, default: `false`)
  — serialize with a blank line for the first line of footnote definitions
* `stringLength` (`((value: string) => number)`, default: `d => d.length`)
  — detect the size of table cells, used when aligning cells
* `singleTilde` (`boolean`, default: `true`)
  — whether to support strikethrough with a single tilde;
  single tildes work on github.com, but are technically prohibited by GFM;
  you can always use 2 or more tildes for strikethrough
* `tablePipeAlign` (`boolean`, default: `true`)
  — whether to align table pipes
* `tableCellPadding` (`boolean`, default: `true`)
  — whether to add a space of padding between table pipes and cells

## Examples

### Example: `singleTilde`

To turn off support for parsing strikethrough with single tildes, pass
`singleTilde: false`:

```js
// …

const file = await unified()
  .use(remarkParse)
  .use(remarkGfm, {singleTilde: false})
  .use(remarkRehype)
  .use(rehypeStringify)
  .process('~one~ and ~~two~~')

console.log(String(file))
```

Yields:

```html
<p>~one~ and <del>two</del></p>
```

### Example: `stringLength`

It’s possible to align tables based on the visual width of cells.
First, let’s show the problem:

```js
import {remark} from 'remark'
import remarkGfm from 'remark-gfm'

const input = `| Alpha | Bravo |
| - | - |
| 中文 | Charlie |
| 👩‍❤️‍👩 | Delta |`

const file = await remark().use(remarkGfm).process(input)

console.log(String(file))
```

The above code shows how remark can be used to format markdown.
The output is as follows:

```markdown
| Alpha    | Bravo   |
| -------- | ------- |
| 中文       | Charlie |
| 👩‍❤️‍👩 | Delta   |
```

To improve the alignment of these full-width characters and emoji, pass a
`stringLength` function that calculates the visual width of cells.
One such algorithm is [`string-width`][string-width].
It can be used like so:

```diff
@@ -1,5 +1,6 @@
 import {remark} from 'remark'
 import remarkGfm from 'remark-gfm'
+import stringWidth from 'string-width'

@@ -10,7 +11,7 @@ async function main() {
 | 👩‍❤️‍👩 | Delta |`

-const file = await remark().use(remarkGfm).process(input)
+const file = await remark()
+  .use(remarkGfm, {stringLength: stringWidth})
+  .process(input)

   console.log(String(file))
```

The output of our code with these changes is as follows:

```markdown
| Alpha | Bravo   |
| ----- | ------- |
| 中文  | Charlie |
| 👩‍❤️‍👩    | Delta   |
```

## Bugs

For bugs present in GFM but not here, or other peculiarities that are
supported, see each corresponding readme:

* [autolink literal](https://github.com/micromark/micromark-extension-gfm-autolink-literal#bugs)
* [footnote](https://github.com/micromark/micromark-extension-gfm-footnote#bugs)
* strikethrough: n/a
* [table](https://github.com/micromark/micromark-extension-gfm-table#bugs)
* tasklists: n/a

## Authoring

For recommendations on how to author GFM, see each corresponding readme:

* [autolink literal](https://github.com/micromark/micromark-extension-gfm-autolink-literal#authoring)
* [footnote](https://github.com/micromark/micromark-extension-gfm-footnote#authoring)
* [strikethrough](https://github.com/micromark/micromark-extension-gfm-strikethrough#authoring)
* [table](https://github.com/micromark/micromark-extension-gfm-table#authoring)
* [tasklists](https://github.com/micromark/micromark-extension-gfm-task-list-item#authoring)

## HTML

This plugin does not handle how markdown is turned to HTML.
See [`remark-rehype`][remark-rehype] for how that happens and how to change it.

## CSS

For info on how GitHub styles these features, see each corresponding readme:

* [autolink literal](https://github.com/micromark/micromark-extension-gfm-autolink-literal#css)
* [footnote](https://github.com/micromark/micromark-extension-gfm-footnote#css)
* [strikethrough](https://github.com/micromark/micromark-extension-gfm-strikethrough#css)
* [table](https://github.com/micromark/micromark-extension-gfm-table#css)
* [tasklists](https://github.com/micromark/micromark-extension-gfm-task-list-item#css)

## Syntax

For info on the syntax of these features, see each corresponding readme:

* [autolink literal](https://github.com/micromark/micromark-extension-gfm-autolink-literal#syntax)
* [footnote](https://github.com/micromark/micromark-extension-gfm-footnote#syntax)
* [strikethrough](https://github.com/micromark/micromark-extension-gfm-strikethrough#syntax)
* [table](https://github.com/micromark/micromark-extension-gfm-table#syntax)
* [tasklists](https://github.com/micromark/micromark-extension-gfm-task-list-item#syntax)

## Syntax tree

For info on the syntax tree of these features, see each corresponding readme:

* [autolink literal](https://github.com/syntax-tree/mdast-util-gfm-autolink-literal#syntax-tree)
* [footnote](https://github.com/syntax-tree/mdast-util-gfm-footnote#syntax-tree)
* [strikethrough](https://github.com/syntax-tree/mdast-util-gfm-strikethrough#syntax-tree)
* [table](https://github.com/syntax-tree/mdast-util-gfm-table#syntax-tree)
* [tasklists](https://github.com/syntax-tree/mdast-util-gfm-task-list-item#syntax-tree)

## Types

This package is fully typed with [TypeScript][].
It exports the additional type [`Options`][api-options].

The node types are supported in `@types/mdast` by default.

## Compatibility

Projects maintained by the unified collective are compatible with maintained
versions of Node.js.

When we cut a new major release, we drop support for unmaintained versions of
Node.
This means we try to keep the current release line, `remark-gfm@^4`, compatible
with Node.js 16.

This plugin works with `remark-parse` version 11+ (`remark` version 15+).
The previous version (v3) worked with `remark-parse` version 10 (`remark`
version 14).
Before that, v2 worked with `remark-parse` version 9 (`remark` version 13).
Earlier versions of `remark-parse` and `remark` had a `gfm` option that enabled
this functionality, which defaulted to true.

## Security

Use of `remark-gfm` does not involve **[rehype][]** ([hast][]) or user
content so there are no openings for [cross-site scripting (XSS)][wiki-xss]
attacks.

## Related

* [`remark-github`][remark-github]
  — link references to commits, issues, PRs, and users
* [`remark-breaks`][remark-breaks]
  — support breaks without needing spaces or escapes (enters to `<br>`)
* [`remark-frontmatter`][remark-frontmatter]
  — support frontmatter (YAML, TOML, and more)
* [`remark-directive`](https://github.com/remarkjs/remark-directive)
  — support directives
* [`remark-math`](https://github.com/remarkjs/remark-math)
  — support math
* [`remark-mdx`](https://github.com/mdx-js/mdx/tree/main/packages/remark-mdx)
  — support MDX (ESM, JSX, expressions)

## Contribute

See [`contributing.md`][contributing] in [`remarkjs/.github`][health] for ways
to get started.
See [`support.md`][support] for ways to get help.

This project has a [code of conduct][coc].
By interacting with this repository, organization, or community you agree to
abide by its terms.

## License

[MIT][license] © [Titus Wormer][author]

<!-- Definitions -->

[api-options]: #options

[api-remark-gfm]: #unifieduseremarkgfm-options

[author]: https://wooorm.com

[backers-badge]: https://opencollective.com/unified/backers/badge.svg

[build]: https://github.com/remarkjs/remark-gfm/actions

[build-badge]: https://github.com/remarkjs/remark-gfm/workflows/main/badge.svg

[chat]: https://github.com/remarkjs/remark/discussions

[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg

[coc]: https://github.com/remarkjs/.github/blob/HEAD/code-of-conduct.md

[collective]: https://opencollective.com/unified

[contributing]: https://github.com/remarkjs/.github/blob/HEAD/contributing.md

[coverage]: https://codecov.io/github/remarkjs/remark-gfm

[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark-gfm.svg

[downloads]: https://www.npmjs.com/package/remark-gfm

[downloads-badge]: https://img.shields.io/npm/dm/remark-gfm.svg

[esm]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c

[esmsh]: https://esm.sh

[gfm]: https://github.github.com/gfm/

[hast]: https://github.com/syntax-tree/hast

[health]: https://github.com/remarkjs/.github

[license]: license

[mdast-util-from-markdown]: https://github.com/syntax-tree/mdast-util-from-markdown

[mdast-util-gfm]: https://github.com/syntax-tree/mdast-util-gfm

[micromark]: https://github.com/micromark/micromark

[micromark-extension-gfm]: https://github.com/micromark/micromark-extension-gfm

[npm]: https://docs.npmjs.com/cli/install

[rehype]: https://github.com/rehypejs/rehype

[rehype-slug]: https://github.com/rehypejs/rehype-slug

[remark]: https://github.com/remarkjs/remark

[remark-breaks]: https://github.com/remarkjs/remark-breaks

[remark-frontmatter]: https://github.com/remarkjs/remark-frontmatter

[remark-github]: https://github.com/remarkjs/remark-github

[remark-rehype]: https://github.com/remarkjs/remark-rehype

[size]: https://bundlejs.com/?q=remark-gfm

[size-badge]: https://img.shields.io/bundlejs/size/remark-gfm

[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg

[string-width]: https://github.com/sindresorhus/string-width

[support]: https://github.com/remarkjs/.github/blob/HEAD/support.md

[typescript]: https://www.typescriptlang.org

[unified]: https://github.com/unifiedjs/unified

[wiki-xss]: https://en.wikipedia.org/wiki/Cross-site_scripting

test/fixtures/autolink-literal/input.md
# Literal autolinks

## WWW autolinks

www.commonmark.org

WWW.COMMONMARK.ORG

Visit www.commonmark.org/help for more information.

Visit www.commonmark.org.

Visit www.commonmark.org/a.b.

www.aaa.bbb.ccc_ccc

www.aaa_bbb.ccc

www.aaa.bbb.ccc.ddd_ddd

www.aaa.bbb.ccc_ccc.ddd

www.aaa.bbb_bbb.ccc.ddd

www.aaa_aaa.bbb.ccc.ddd

Visit www.commonmark.org.

Visit www.commonmark.org/a.b.

www.google.com/search?q=Markup+(business)

www.google.com/search?q=Markup+(business)))

(www.google.com/search?q=Markup+(business))

(www.google.com/search?q=Markup+(business)

www.google.com/search?q=(business))+ok

www.google.com/search?q=commonmark&hl=en

www.google.com/search?q=commonmark&hl;en

www.google.com/search?q=commonmark&hl;

www.commonmark.org/he<lp

## HTTP autolinks

http://example.com

https://example.com

https://example

http://commonmark.org

(Visit https://encrypted.google.com/search?q=Markup+(business))

## Email autolinks

No dot: foo@barbaz

No dot: foo@barbaz.

foo@bar.baz

hello@mail+xyz.example isn’t valid, but hello+xyz@mail.example is.

a.b-c_d@a.b

a.b-c_d@a.b.

a.b-c_d@a.b-

a.b-c_d@a.b_

a@a_b.c

a@a-b.c

Can’t end in an underscore followed by a period: aaa@a.b_.

Can contain an underscore followed by a period: aaa@a.b_.c

[https://google.com](https://google.com)

test/fixtures/autolink-literal/output.md
# Literal autolinks

## WWW autolinks

[www.commonmark.org](http://www.commonmark.org)

[WWW.COMMONMARK.ORG](http://WWW.COMMONMARK.ORG)

Visit [www.commonmark.org/help](http://www.commonmark.org/help) for more information.

Visit [www.commonmark.org](http://www.commonmark.org).

Visit [www.commonmark.org/a.b](http://www.commonmark.org/a.b).

www\.aaa.bbb.ccc\_ccc

www\.aaa\_bbb.ccc

www\.aaa.bbb.ccc.ddd\_ddd

www\.aaa.bbb.ccc\_ccc.ddd

[www.aaa.bbb\_bbb.ccc.ddd](http://www.aaa.bbb_bbb.ccc.ddd)

[www.aaa\_aaa.bbb.ccc.ddd](http://www.aaa_aaa.bbb.ccc.ddd)

Visit [www.commonmark.org](http://www.commonmark.org).

Visit [www.commonmark.org/a.b](http://www.commonmark.org/a.b).

[www.google.com/search?q=Markup+(business)](http://www.google.com/search?q=Markup+\(business\))

[www.google.com/search?q=Markup+(business)](http://www.google.com/search?q=Markup+\(business\))))

([www.google.com/search?q=Markup+(business)](http://www.google.com/search?q=Markup+\(business\)))

([www.google.com/search?q=Markup+(business)](http://www.google.com/search?q=Markup+\(business\))

[www.google.com/search?q=(business))+ok](http://www.google.com/search?q=\(business\)\)+ok)

[www.google.com/search?q=commonmark\&hl=en](http://www.google.com/search?q=commonmark\&hl=en)

[www.google.com/search?q=commonmark\&hl;en](http://www.google.com/search?q=commonmark\&hl;en)

[www.google.com/search?q=commonmark](http://www.google.com/search?q=commonmark)\&hl;

[www.commonmark.org/he](http://www.commonmark.org/he)\<lp

## HTTP autolinks

<http://example.com>

<https://example.com>

<https://example>

<http://commonmark.org>

(Visit <https://encrypted.google.com/search?q=Markup+(business)>)

## Email autolinks

No dot: foo\@barbaz

No dot: foo\@barbaz.

<foo@bar.baz>

hello\@mail+xyz.example isn’t valid, but <hello+xyz@mail.example> is.

<a.b-c_d@a.b>

<a.b-c_d@a.b>.

a.b-c\_d\@a.b-

a.b-c\_d\@a.b\_

<a@a_b.c>

<a@a-b.c>

Can’t end in an underscore followed by a period: aaa\@a.b\_.

Can contain an underscore followed by a period: <aaa@a.b_.c>

<https://google.com>

(...)

```
test/index.js
```.js
/**
 * @import {Root} from 'mdast'
 * @import {Options} from 'remark-gfm'
 */

import assert from 'node:assert/strict'
import fs from 'node:fs/promises'
import process from 'node:process'
import test from 'node:test'
import {isHidden} from 'is-hidden'
import {remark} from 'remark'
import remarkGfm from 'remark-gfm'
import stringWidth from 'string-width'

test('remarkGfm', async function (t) {
  await t.test('should expose the public api', async function () {
    assert.deepEqual(Object.keys(await import('remark-gfm')).sort(), [
      'default'
    ])
  })

  await t.test('should not throw if not passed options', async function () {
    assert.doesNotThrow(function () {
      remark().use(remarkGfm).freeze()
    })
  })
})

test('fixtures', async function (t) {
  const base = new URL('fixtures/', import.meta.url)
  const folders = await fs.readdir(base)

  let index = -1

  while (++index < folders.length) {
    const folder = folders[index]

    if (isHidden(folder)) continue

    await t.test(folder, async function () {
      const folderUrl = new URL(folder + '/', base)
      const inputUrl = new URL('input.md', folderUrl)
      const outputUrl = new URL('output.md', folderUrl)
      const treeUrl = new URL('tree.json', folderUrl)
      const configUrl = new URL('config.json', folderUrl)

      const input = String(await fs.readFile(inputUrl))

      /** @type {Options | undefined} */
      let config
      /** @type {Root} */
      let expected
      /** @type {string} */
      let output

      try {
        config = JSON.parse(String(await fs.readFile(configUrl)))
      } catch {}

      if (folder === 'table-string-length') {
        config = {stringLength: stringWidth}
      }

      const processor = remark().use(remarkGfm, config)
      const actual = processor.parse(input)

      try {
        output = String(await fs.readFile(outputUrl))
      } catch {
        output = input
      }

      try {
        if ('UPDATE' in process.env) {
          throw new Error('Updating…')
        }

        expected = JSON.parse(String(await fs.readFile(treeUrl)))
      } catch {
        expected = actual

        // New fixture.
        await fs.writeFile(treeUrl, JSON.stringify(actual, undefined, 2) + '\n')
      }

      assert.deepEqual(actual, expected)

      assert.equal(String(await processor.process(input)), String(output))
    })
  }
})

```
tsconfig.json
```.json
{
  "compilerOptions": {
    "checkJs": true,
    "customConditions": ["development"],
    "declarationMap": true,
    "declaration": true,
    "emitDeclarationOnly": true,
    "exactOptionalPropertyTypes": true,
    "lib": ["es2022"],
    "module": "node16",
    "strict": true,
    "target": "es2022"
  },
  "exclude": ["coverage/", "node_modules/"],
  "include": ["**/*.js", "index.d.ts"]
}

```




====



Token Usage:
GitHub Tokens: 23669
LLM Input Tokens: 0
LLM Output Tokens: 0
Total Tokens: 23669

FileTree:
.eslintrc.js
.github/workflows/nodejs.yml
.gitignore
CHANGELOG.md
README.md
examples/simple/.gitignore
examples/simple/custom-typograf-example.js
examples/simple/example.js
examples/simple/example.md
examples/simple/package-lock.json
examples/simple/package.json
index.js
jest.config.js
package.json
remark-typograf.js
remark-typograf.test.js
scripts/before.md
scripts/generate.js
scripts/publishSite.js

Analysis:
.eslintrc.js
```.js
module.exports = {
  env: {
    commonjs: true,
    es6: true,
    node: true,
  },
  extends: ["eslint:recommended", "plugin:jest/recommended"],
  globals: {
    Atomics: "readonly",
    SharedArrayBuffer: "readonly",
  },
  parserOptions: {
    ecmaVersion: 2018,
  },
  rules: {},
};

```
.github/workflows/nodejs.yml
```.yml
# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint
      - run: npm test
        env:
          CI: true

```
.gitignore
```.gitignore
# Created by .ignore support plugin (hsz.mobi)
### Node template
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2

.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.pnp.*
.idea


```
CHANGELOG.md
## 2.1.6 (May 5, 2020)

update dev dependencies

## 2.1.5 (May 5, 2020)

fix case with inline code

## 2.1.4 (May 5, 2020)

use visit method instead of own tree walker

## 2.1.3 (May 5, 2020)

use files section in package.json instead of .npmignore

## 2.1.2 (May 5, 2020)

Fix case with mark and punctuation. Before the fix, plugin add an unnecessary comma.

```
    **Categories,** а у родительского тега // original markdonw
    **Categories,**, а у родительского тега // before the fix
    **Categories,** а у родительского тега // after the fix
```

## 2.1.1 (Apr 26, 2020)

Fix readme

## 2.1.0 (Apr 26, 2020)

Add `keywords` config. Strings from this config will be not typografed.

## 2.0.1 (Apr 24, 2020)

Now typograf is built-in to plugin. Also was added remark-cli support.

### Breaking Changes

Plugin use builtIn typograf. If you want use custom typograf set `builtIn`option to false.

## 1.0.0 (Apr 20, 2020)

Initial version.

README.md
# remarkjs-typograf

Plugin for [remark](https://github.com/remarkjs/remark) to make your typography better with [typograf](https://github.com/typograf/typograf)

Example https://mavrin.github.io/remark-typograf/

## Install

[npm](https://docs.npmjs.com/cli/install):

```sh
npm install @mavrin/remark-typograf remark
```

## Use

Say we have the following file, `example.md`:

````markdown
## spread operator `...`

It is test...

```js
function test(...args) {
  return args;
}
```
````

You probably want to use it on the CLI through a config file:

```diff
  …
  "remarkConfig": {
    "plugins": [
      [
        "@mavrin/remark-typograf",
        {
          "locale": ["ru"]
        }
      ]
    ]
  }
…
```

Or use it on the CLI directly (ru locale will be used as default)

```sh
remark -u @mavrin/remark-typograf example.md -o processed-example.md
```

Or use this on the API:

```js
const fs = require("fs");
const path = require("path");
const remark = require("remark");
const remarkTypograf = require("@mavrin/remark-typograf");

const processed = remark()
  .use(remarkTypograf, { locale: ["en-US"], keywords: [":)"] })
  .processSync(fs.readFileSync(path.resolve(__dirname, "example.md")));

fs.writeFileSync(path.resolve(__dirname, "processed-example.md"), processed);
```

or with custom typograf:

```js
const fs = require("fs");
const path = require("path");
const remark = require("remark");
const remarkTypograf = require("@mavrin/remark-typograf");
const Typograf = require("typograf");

const processed = remark()
  .use(remarkTypograf, {
    typograf: new Typograf({ locale: ["en-US"] }),
    keywords: [":)"],
    builtIn: false,
  })
  .processSync(fs.readFileSync(path.resolve(__dirname, "example.md")));

fs.writeFileSync(path.resolve(__dirname, "processed-example.md"), processed);
```

Yields:

````markdown
## spread operator `...`

It is test…

```js
function test(...args) {
  return args;
}
```
````

[Example source code](/examples/simple)

examples/simple/.gitignore
```.gitignore
processed-example.md

```
examples/simple/custom-typograf-example.js
```.js
const fs = require("fs");
const path = require("path");
const remark = require("remark");
const remarkTypograf = require("@mavrin/remark-typograf");
const Typograf = require("typograf");

const processed = remark()
  .use(remarkTypograf, {
    typograf: new Typograf({ locale: ["en-US"] }),
    builtIn: false,
  })
  .processSync(fs.readFileSync(path.resolve(__dirname, "example.md")));

fs.writeFileSync(path.resolve(__dirname, "processed-example.md"), processed.toString());

```
examples/simple/example.js
```.js
const fs = require("fs");
const path = require("path");
const remark = require("remark");
const remarkTypograf = require("@mavrin/remark-typograf");
const Typograf = require("typograf");

const processed = remark()
  .use(remarkTypograf, {
    typograf: new Typograf({ locale: ["en-US"] }),
    keywords: [":)"],
    builtIn: false,
  })
  .processSync(fs.readFileSync(path.resolve(__dirname, "example.md")));

fs.writeFileSync(path.resolve(__dirname, "processed-example.md"), processed.toString());

```
examples/simple/example.md
## spread operator `...`

It is test... :)

```js
function test(...args) {
  return args;
}
```

examples/simple/package-lock.json
```.json
{
  "name": "remark-typograf-simple-expample",
  "requires": true,
  "lockfileVersion": 1,
  "dependencies": {
    "@babel/code-frame": {
      "version": "7.12.13",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.12.13.tgz",
      "integrity": "sha512-HV1Cm0Q3ZrpCR93tkWOYiuYIgLxZXZFVG2VgK+MBWjUqZTundupbfx2aXarXuw5Ko5aMcjtJgbSs4vUGBS5v6g==",
      "requires": {
        "@babel/highlight": "^7.12.13"
      }
    },
    "@babel/helper-validator-identifier": {
      "version": "7.12.11",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.12.11.tgz",
      "integrity": "sha512-np/lG3uARFybkoHokJUmf1QfEvRVCPbmQeUQpKow5cQ3xWrV9i3rUHodKDJPQfTVX61qKi+UdYk8kik84n7XOw=="
    },
    "@babel/highlight": {
      "version": "7.13.10",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.13.10.tgz",
      "integrity": "sha512-5aPpe5XQPzflQrFwL1/QoeHkP2MsA4JCntcXHRhEsdsfPVkvPi2w7Qix4iV7t5S/oC9OodGrggd8aco1g3SZFg==",
      "requires": {
        "@babel/helper-validator-identifier": "^7.12.11",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "@mavrin/remark-typograf": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@mavrin/remark-typograf/-/remark-typograf-2.1.6.tgz",
      "integrity": "sha512-6fOVtmX7U1ytwYJh9pd8HbDq2T4SodVkp6bZpe6aYfnieHlujvmyBMtogl+TkA8rPX3BEhNEBCDG07Kesk8y9Q==",
      "requires": {
        "lodash.escaperegexp": "^4.1.2",
        "typograf": "^6.11.0",
        "unist-util-visit": "^2.0.2"
      }
    },
    "@types/mdast": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/mdast/-/mdast-3.0.3.tgz",
      "integrity": "sha512-SXPBMnFVQg1s00dlMCc/jCdvPqdE4mXaMMCeRlxLDmTAEoegHT53xKtkDnzDTOcmMHUfcjyf36/YYZ6SxRdnsw==",
      "requires": {
        "@types/unist": "*"
      }
    },
    "@types/unist": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/@types/unist/-/unist-2.0.3.tgz",
      "integrity": "sha512-FvUupuM3rlRsRtCN+fDudtmytGO6iHJuuRKS1Ss0pG5z8oX0diNEw94UEL7hgDbpN94rgaK5R7sWm6RrSkZuAQ=="
    },
    "ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ=="
    },
    "ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "requires": {
        "color-convert": "^2.0.1"
      }
    },
    "anymatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz",
      "integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==",
      "requires": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      }
    },
    "argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "requires": {
        "sprintf-js": "~1.0.2"
      }
    },
    "bail": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/bail/-/bail-1.0.5.tgz",
      "integrity": "sha512-xFbRxM1tahm08yHBP16MMjVUAvDaBMD38zsM9EMAUN61omwLmKlOpB/Zku5QkjZ8TZ4vn53pj+t518cH0S03RQ=="
    },
    "balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "binary-extensions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
      "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA=="
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "buffer-from": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A=="
    },
    "camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg=="
    },
    "chalk": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
      "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
      "requires": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      }
    },
    "character-entities": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/character-entities/-/character-entities-1.2.4.tgz",
      "integrity": "sha512-iBMyeEHxfVnIakwOuDXpVkc54HijNgCyQB2w0VfGQThle6NXn50zU6V/u+LDhxHcDUPojn6Kpga3PTAD8W1bQw=="
    },
    "character-entities-legacy": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/character-entities-legacy/-/character-entities-legacy-1.1.4.tgz",
      "integrity": "sha512-3Xnr+7ZFS1uxeiUDvV02wQ+QDbc55o97tIV5zHScSPJpcLm/r0DFPcoY3tYRp+VZukxuMeKgXYmsXQHO05zQeA=="
    },
    "character-reference-invalid": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/character-reference-invalid/-/character-reference-invalid-1.1.4.tgz",
      "integrity": "sha512-mKKUkUbhPpQlCOfIuZkvSEgktjPFIsZKRRbC6KWVEMvlzblj3i3asQv5ODsrwt0N3pHAEvjP8KTQPHkp0+6jOg=="
    },
    "chokidar": {
      "version": "3.5.1",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.1.tgz",
      "integrity": "sha512-9+s+Od+W0VJJzawDma/gvBNQqkTiqYTWLuZoyAsivsI4AaWTCzHG06/TMjsf1cYe9Cb97UCEhjz7HvnPk2p/tw==",
      "requires": {
        "anymatch": "~3.1.1",
        "braces": "~3.0.2",
        "fsevents": "~2.3.1",
        "glob-parent": "~5.1.0",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.5.0"
      }
    },
    "color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "requires": {
        "color-name": "~1.1.4"
      }
    },
    "color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
    },
    "concat-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-2.0.0.tgz",
      "integrity": "sha512-MWufYdFw53ccGjCA+Ol7XJYpAlW6/prSMzuPOTRnJGcGzuhLn4Scrz7qf6o8bROZ514ltazcIFJZevcfbo0x7A==",
      "requires": {
        "buffer-from": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.0.2",
        "typedarray": "^0.0.6"
      }
    },
    "debug": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
      "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
      "requires": {
        "ms": "2.1.2"
      }
    },
    "emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "requires": {
        "is-arrayish": "^0.2.1"
      }
    },
    "escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
    },
    "esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A=="
    },
    "extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
    },
    "fault": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/fault/-/fault-1.0.4.tgz",
      "integrity": "sha512-CJ0HCB5tL5fYTEA7ToAq5+kTwd++Borf1/bifxd9iT70QcXr4MRrO3Llf8Ifs70q+SJcGHFtnIE/Nw6giCtECA==",
      "requires": {
        "format": "^0.2.0"
      }
    },
    "figgy-pudding": {
      "version": "3.5.2",
      "resolved": "https://registry.npmjs.org/figgy-pudding/-/figgy-pudding-3.5.2.tgz",
      "integrity": "sha512-0btnI/H8f2pavGMN8w40mlSKOfTK2SVJmBfBeVIj3kNw0swwgzyRq0d5TJVOwodFmtvpPeWPN/MCcfuWF0Ezbw=="
    },
    "figures": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/figures/-/figures-3.2.0.tgz",
      "integrity": "sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==",
      "requires": {
        "escape-string-regexp": "^1.0.5"
      }
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "find-up": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
      "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
      "requires": {
        "locate-path": "^3.0.0"
      }
    },
    "format": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/format/-/format-0.2.2.tgz",
      "integrity": "sha1-1hcBB+nv3E7TDJ3DkBbflCtctYs="
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="
    },
    "fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "optional": true
    },
    "glob": {
      "version": "7.1.6",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
      "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.0.4",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "requires": {
        "is-glob": "^4.0.1"
      }
    },
    "has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
    },
    "ignore": {
      "version": "5.1.8",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.1.8.tgz",
      "integrity": "sha512-BMpfD7PpiETpBl/A6S498BaIJ6Y/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53pJY7EtZk5KACI57i1Uw=="
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "ini": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
      "integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew=="
    },
    "is-alphabetical": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-alphabetical/-/is-alphabetical-1.0.4.tgz",
      "integrity": "sha512-DwzsA04LQ10FHTZuL0/grVDk4rFoVH1pjAToYwBrHSxcrBIGQuXrQMtD5U1b0U2XVgKZCTLLP8u2Qxqhy3l2Vg=="
    },
    "is-alphanumerical": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-alphanumerical/-/is-alphanumerical-1.0.4.tgz",
      "integrity": "sha512-UzoZUr+XfVz3t3v4KyGEniVL9BDRoQtY7tOyrRybkVNjDFWyo1yhXNGrrBTQxp3ib9BLAWs7k2YKBQsFRkZG9A==",
      "requires": {
        "is-alphabetical": "^1.0.0",
        "is-decimal": "^1.0.0"
      }
    },
    "is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0="
    },
    "is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "requires": {
        "binary-extensions": "^2.0.0"
      }
    },
    "is-buffer": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.5.tgz",
      "integrity": "sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ=="
    },
    "is-decimal": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-decimal/-/is-decimal-1.0.4.tgz",
      "integrity": "sha512-RGdriMmQQvZ2aqaQq3awNA6dCGtKpiDFcOzrTWrDAT2MiWrKQVPmxLGHl7Y2nNu6led0kEyoX0enY0qXYsv9zw=="
    },
    "is-empty": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-empty/-/is-empty-1.2.0.tgz",
      "integrity": "sha1-3pu1snhzigWgsJpX4ftNSjQan2s="
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI="
    },
    "is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
    },
    "is-glob": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz",
      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==",
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "is-hexadecimal": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-hexadecimal/-/is-hexadecimal-1.0.4.tgz",
      "integrity": "sha512-gyPJuv83bHMpocVYoqof5VDiZveEoGoFL8m3BXNb2VW8Xs+rz9kqO8LOQ5DH6EsuvilT1ApazU0pyl+ytbPtlw=="
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng=="
    },
    "is-plain-obj": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-2.1.0.tgz",
      "integrity": "sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA=="
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "requires": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      }
    },
    "json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
    },
    "json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg=="
    },
    "libnpmconfig": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/libnpmconfig/-/libnpmconfig-1.2.1.tgz",
      "integrity": "sha512-9esX8rTQAHqarx6qeZqmGQKBNZR5OIbl/Ayr0qQDy3oXja2iFVQQI81R6GZ2a02bSNZ9p3YOGX1O6HHCb1X7kA==",
      "requires": {
        "figgy-pudding": "^3.5.1",
        "find-up": "^3.0.0",
        "ini": "^1.3.5"
      }
    },
    "lines-and-columns": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.1.6.tgz",
      "integrity": "sha1-HADHQ7QzzQpOgHWPe2SldEDZ/wA="
    },
    "load-plugin": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/load-plugin/-/load-plugin-3.0.0.tgz",
      "integrity": "sha512-od7eKCCZ62ITvFf8nHHrIiYmgOHb4xVNDRDqxBWSaao5FZyyZVX8OmRCbwjDGPrSrgIulwPNyBsWCGnhiDC0oQ==",
      "requires": {
        "libnpmconfig": "^1.0.0",
        "resolve-from": "^5.0.0"
      }
    },
    "locate-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
      "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
      "requires": {
        "p-locate": "^3.0.0",
        "path-exists": "^3.0.0"
      }
    },
    "lodash.escaperegexp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/lodash.escaperegexp/-/lodash.escaperegexp-4.1.2.tgz",
      "integrity": "sha1-ZHYsSGGAglGKw99Mz11YhtriA0c="
    },
    "longest-streak": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/longest-streak/-/longest-streak-2.0.4.tgz",
      "integrity": "sha512-vM6rUVCVUJJt33bnmHiZEvr7wPT78ztX7rojL+LW51bHtLh6HTjx84LA5W4+oa6aKEJA7jJu5LR6vQRBpA5DVg=="
    },
    "markdown-extensions": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/markdown-extensions/-/markdown-extensions-1.1.1.tgz",
      "integrity": "sha512-WWC0ZuMzCyDHYCasEGs4IPvLyTGftYwh6wIEOULOF0HXcqZlhwRzrK0w2VUlxWA98xnvb/jszw4ZSkJ6ADpM6Q=="
    },
    "mdast-util-from-markdown": {
      "version": "0.8.5",
      "resolved": "https://registry.npmjs.org/mdast-util-from-markdown/-/mdast-util-from-markdown-0.8.5.tgz",
      "integrity": "sha512-2hkTXtYYnr+NubD/g6KGBS/0mFmBcifAsI0yIWRiRo0PjVs6SSOSOdtzbp6kSGnShDN6G5aWZpKQ2lWRy27mWQ==",
      "requires": {
        "@types/mdast": "^3.0.0",
        "mdast-util-to-string": "^2.0.0",
        "micromark": "~2.11.0",
        "parse-entities": "^2.0.0",
        "unist-util-stringify-position": "^2.0.0"
      }
    },
    "mdast-util-to-markdown": {
      "version": "0.6.5",
      "resolved": "https://registry.npmjs.org/mdast-util-to-markdown/-/mdast-util-to-markdown-0.6.5.tgz",
      "integrity": "sha512-XeV9sDE7ZlOQvs45C9UKMtfTcctcaj/pGwH8YLbMHoMOXNNCn2LsqVQOqrF1+/NU8lKDAqozme9SCXWyo9oAcQ==",
      "requires": {
        "@types/unist": "^2.0.0",
        "longest-streak": "^2.0.0",
        "mdast-util-to-string": "^2.0.0",
        "parse-entities": "^2.0.0",
        "repeat-string": "^1.0.0",
        "zwitch": "^1.0.0"
      }
    },
    "mdast-util-to-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/mdast-util-to-string/-/mdast-util-to-string-2.0.0.tgz",
      "integrity": "sha512-AW4DRS3QbBayY/jJmD8437V1Gombjf8RSOUCMFBuo5iHi58AGEgVCKQ+ezHkZZDpAQS75hcBMpLqjpJTjtUL7w=="
    },
    "micromark": {
      "version": "2.11.4",
      "resolved": "https://registry.npmjs.org/micromark/-/micromark-2.11.4.tgz",
      "integrity": "sha512-+WoovN/ppKolQOFIAajxi7Lu9kInbPxFuTBVEavFcL8eAfVstoc5MocPmqBeAdBOJV00uaVjegzH4+MA0DN/uA==",
      "requires": {
        "debug": "^4.0.0",
        "parse-entities": "^2.0.0"
      }
    },
    "minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.6.tgz",
      "integrity": "sha512-Jsjnk4bw3YJqYzbdyBiNsPWHPfO++UGG749Cxs6peCu5Xg4nrena6OVxOYxrQTqww0Jmwt+Ref8rggumkTLz9Q=="
    },
    "ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
      "requires": {
        "wrappy": "1"
      }
    },
    "p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "requires": {
        "p-try": "^2.0.0"
      }
    },
    "p-locate": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
      "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
      "requires": {
        "p-limit": "^2.0.0"
      }
    },
    "p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
    },
    "parse-entities": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/parse-entities/-/parse-entities-2.0.0.tgz",
      "integrity": "sha512-kkywGpCcRYhqQIchaWqZ875wzpS/bMKhz5HnN3p7wveJTkTtyAB/AlnS0f8DFSqYW1T82t6yEAkEcB+A1I3MbQ==",
      "requires": {
        "character-entities": "^1.0.0",
        "character-entities-legacy": "^1.0.0",
        "character-reference-invalid": "^1.0.0",
        "is-alphanumerical": "^1.0.0",
        "is-decimal": "^1.0.0",
        "is-hexadecimal": "^1.0.0"
      }
    },
    "parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      }
    },
    "path-exists": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
      "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU="
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="
    },
    "picomatch": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.2.3.tgz",
      "integrity": "sha512-KpELjfwcCDUb9PeigTs2mBJzXUPzAuP2oPcA989He8Rte0+YUAjw1JVedDhuTKPkHjSYzMN3npC9luThGYEKdg=="
    },
    "readable-stream": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
      "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
      "requires": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      }
    },
    "readdirp": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.5.0.tgz",
      "integrity": "sha512-cMhu7c/8rdhkHXWsY+osBhfSy0JikwpHK/5+imo+LpeasTF8ouErHrlYkwT0++njiyuDvc7OFY5T3ukvZ8qmFQ==",
      "requires": {
        "picomatch": "^2.2.1"
      }
    },
    "remark": {
      "version": "13.0.0",
      "resolved": "https://registry.npmjs.org/remark/-/remark-13.0.0.tgz",
      "integrity": "sha512-HDz1+IKGtOyWN+QgBiAT0kn+2s6ovOxHyPAFGKVE81VSzJ+mq7RwHFledEvB5F1p4iJvOah/LOKdFuzvRnNLCA==",
      "requires": {
        "remark-parse": "^9.0.0",
        "remark-stringify": "^9.0.0",
        "unified": "^9.1.0"
      }
    },
    "remark-cli": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/remark-cli/-/remark-cli-9.0.0.tgz",
      "integrity": "sha512-y6kCXdwZoMoh0Wo4Och1tDW50PmMc86gW6GpF08v9d+xUCEJE2wwXdQ+TnTaUamRnfFdU+fE+eNf2PJ53cyq8g==",
      "requires": {
        "markdown-extensions": "^1.1.0",
        "remark": "^13.0.0",
        "unified-args": "^8.0.0"
      }
    },
    "remark-parse": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/remark-parse/-/remark-parse-9.0.0.tgz",
      "integrity": "sha512-geKatMwSzEXKHuzBNU1z676sGcDcFoChMK38TgdHJNAYfFtsfHDQG7MoJAjs6sgYMqyLduCYWDIWZIxiPeafEw==",
      "requires": {
        "mdast-util-from-markdown": "^0.8.0"
      }
    },
    "remark-stringify": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/remark-stringify/-/remark-stringify-9.0.1.tgz",
      "integrity": "sha512-mWmNg3ZtESvZS8fv5PTvaPckdL4iNlCHTt8/e/8oN08nArHRHjNZMKzA/YW3+p7/lYqIw4nx1XsjCBo/AxNChg==",
      "requires": {
        "mdast-util-to-markdown": "^0.6.0"
      }
    },
    "repeat-string": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
      "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
    },
    "resolve-from": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
      "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw=="
    },
    "safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ=="
    },
    "sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw="
    },
    "string-width": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.2.tgz",
      "integrity": "sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE/xi3vOeA==",
      "requires": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.0"
      }
    },
    "string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "requires": {
        "safe-buffer": "~5.2.0"
      }
    },
    "strip-ansi": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
      "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
      "requires": {
        "ansi-regex": "^5.0.0"
      }
    },
    "supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "requires": {
        "has-flag": "^4.0.0"
      }
    },
    "text-table": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ="
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "to-vfile": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/to-vfile/-/to-vfile-6.1.0.tgz",
      "integrity": "sha512-BxX8EkCxOAZe+D/ToHdDsJcVI4HqQfmw0tCkp31zf3dNP/XWIAjU4CmeuSwsSoOzOTqHPOL0KUzyZqJplkD0Qw==",
      "requires": {
        "is-buffer": "^2.0.0",
        "vfile": "^4.0.0"
      }
    },
    "trough": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/trough/-/trough-1.0.5.tgz",
      "integrity": "sha512-rvuRbTarPXmMb79SmzEp8aqXNKcK+y0XaB298IXueQ8I2PsrATcPBCSPyK/dDNa2iWOhKlfNnOjdAOTBU/nkFA=="
    },
    "typedarray": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c="
    },
    "typograf": {
      "version": "6.11.3",
      "resolved": "https://registry.npmjs.org/typograf/-/typograf-6.11.3.tgz",
      "integrity": "sha512-aj+FLX8mc9BaWHQeSB1dk7Om7Ag4dGx+rl5jpO6QdpMUKcwqffhFjGAki/SAzsjbUZKUGHXJgaYUcUD6z3eSJg=="
    },
    "unified": {
      "version": "9.2.1",
      "resolved": "https://registry.npmjs.org/unified/-/unified-9.2.1.tgz",
      "integrity": "sha512-juWjuI8Z4xFg8pJbnEZ41b5xjGUWGHqXALmBZ3FC3WX0PIx1CZBIIJ6mXbYMcf6Yw4Fi0rFUTA1cdz/BglbOhA==",
      "requires": {
        "bail": "^1.0.0",
        "extend": "^3.0.0",
        "is-buffer": "^2.0.0",
        "is-plain-obj": "^2.0.0",
        "trough": "^1.0.0",
        "vfile": "^4.0.0"
      }
    },
    "unified-args": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/unified-args/-/unified-args-8.1.0.tgz",
      "integrity": "sha512-t1HPS1cQPsVvt/6EtyWIbQGurza5684WGRigNghZRvzIdHm3LPgMdXPyGx0npORKzdiy5+urkF0rF5SXM8lBuQ==",
      "requires": {
        "camelcase": "^5.0.0",
        "chalk": "^3.0.0",
        "chokidar": "^3.0.0",
        "fault": "^1.0.2",
        "json5": "^2.0.0",
        "minimist": "^1.2.0",
        "text-table": "^0.2.0",
        "unified-engine": "^8.0.0"
      }
    },
    "unified-engine": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/unified-engine/-/unified-engine-8.1.0.tgz",
      "integrity": "sha512-ptXTWUf9HZ2L9xto7tre+hSdSN7M9S0rypUpMAcFhiDYjrXLrND4If+8AZOtPFySKI/Zhfxf7GVAR34BqixDUA==",
      "requires": {
        "concat-stream": "^2.0.0",
        "debug": "^4.0.0",
        "fault": "^1.0.0",
        "figures": "^3.0.0",
        "glob": "^7.0.3",
        "ignore": "^5.0.0",
        "is-buffer": "^2.0.0",
        "is-empty": "^1.0.0",
        "is-plain-obj": "^2.0.0",
        "js-yaml": "^3.6.1",
        "load-plugin": "^3.0.0",
        "parse-json": "^5.0.0",
        "to-vfile": "^6.0.0",
        "trough": "^1.0.0",
        "unist-util-inspect": "^5.0.0",
        "vfile-reporter": "^6.0.0",
        "vfile-statistics": "^1.1.0"
      }
    },
    "unist-util-inspect": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/unist-util-inspect/-/unist-util-inspect-5.0.1.tgz",
      "integrity": "sha512-fPNWewS593JSmg49HbnE86BJKuBi1/nMWhDSccBvbARfxezEuJV85EaARR9/VplveiwCoLm2kWq+DhP8TBaDpw==",
      "requires": {
        "is-empty": "^1.0.0"
      }
    },
    "unist-util-is": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/unist-util-is/-/unist-util-is-4.0.2.tgz",
      "integrity": "sha512-Ofx8uf6haexJwI1gxWMGg6I/dLnF2yE+KibhD3/diOqY2TinLcqHXCV6OI5gFVn3xQqDH+u0M625pfKwIwgBKQ=="
    },
    "unist-util-stringify-position": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-2.0.3.tgz",
      "integrity": "sha512-3faScn5I+hy9VleOq/qNbAd6pAx7iH5jYBMS9I1HgQVijz/4mv5Bvw5iw1sC/90CODiKo81G/ps8AJrISn687g==",
      "requires": {
        "@types/unist": "^2.0.2"
      }
    },
    "unist-util-visit": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/unist-util-visit/-/unist-util-visit-2.0.3.tgz",
      "integrity": "sha512-iJ4/RczbJMkD0712mGktuGpm/U4By4FfDonL7N/9tATGIF4imikjOuagyMY53tnZq3NP6BcmlrHhEKAfGWjh7Q==",
      "requires": {
        "@types/unist": "^2.0.0",
        "unist-util-is": "^4.0.0",
        "unist-util-visit-parents": "^3.0.0"
      }
    },
    "unist-util-visit-parents": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/unist-util-visit-parents/-/unist-util-visit-parents-3.1.0.tgz",
      "integrity": "sha512-0g4wbluTF93npyPrp/ymd3tCDTMnP0yo2akFD2FIBAYXq/Sga3lwaU1D8OYKbtpioaI6CkDcQ6fsMnmtzt7htw==",
      "requires": {
        "@types/unist": "^2.0.0",
        "unist-util-is": "^4.0.0"
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
    },
    "vfile": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/vfile/-/vfile-4.2.1.tgz",
      "integrity": "sha512-O6AE4OskCG5S1emQ/4gl8zK586RqA3srz3nfK/Viy0UPToBc5Trp9BVFb1u0CjsKrAWwnpr4ifM/KBXPWwJbCA==",
      "requires": {
        "@types/unist": "^2.0.0",
        "is-buffer": "^2.0.0",
        "unist-util-stringify-position": "^2.0.0",
        "vfile-message": "^2.0.0"
      }
    },
    "vfile-message": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/vfile-message/-/vfile-message-2.0.4.tgz",
      "integrity": "sha512-DjssxRGkMvifUOJre00juHoP9DPWuzjxKuMDrhNbk2TdaYYBNMStsNhEOt3idrtI12VQYM/1+iM0KOzXi4pxwQ==",
      "requires": {
        "@types/unist": "^2.0.0",
        "unist-util-stringify-position": "^2.0.0"
      }
    },
    "vfile-reporter": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/vfile-reporter/-/vfile-reporter-6.0.2.tgz",
      "integrity": "sha512-GN2bH2gs4eLnw/4jPSgfBjo+XCuvnX9elHICJZjVD4+NM0nsUrMTvdjGY5Sc/XG69XVTgLwj7hknQVc6M9FukA==",
      "requires": {
        "repeat-string": "^1.5.0",
        "string-width": "^4.0.0",
        "supports-color": "^6.0.0",
        "unist-util-stringify-position": "^2.0.0",
        "vfile-sort": "^2.1.2",
        "vfile-statistics": "^1.1.0"
      },
      "dependencies": {
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="
        },
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "vfile-sort": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/vfile-sort/-/vfile-sort-2.2.2.tgz",
      "integrity": "sha512-tAyUqD2R1l/7Rn7ixdGkhXLD3zsg+XLAeUDUhXearjfIcpL1Hcsj5hHpCoy/gvfK/Ws61+e972fm0F7up7hfYA=="
    },
    "vfile-statistics": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/vfile-statistics/-/vfile-statistics-1.1.4.tgz",
      "integrity": "sha512-lXhElVO0Rq3frgPvFBwahmed3X03vjPF8OcjKMy8+F1xU/3Q3QU3tKEDp743SFtb74PdF0UWpxPvtOP0GCLheA=="
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
    },
    "zwitch": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/zwitch/-/zwitch-1.0.5.tgz",
      "integrity": "sha512-V50KMwwzqJV0NpZIZFwfOD5/lyny3WlSzRiXgA0G7VUnRlqttta1L6UQIHzd6EuBY/cHGfwTIck7w1yH6Q5zUw=="
    }
  }
}

```
examples/simple/package.json
```.json
{
  "name": "remark-typograf-simple-expample",
  "private": true,
  "license": "MIT",
  "dependencies": {
    "@mavrin/remark-typograf": "^2.1.6",
    "remark": "^13.0.0",
    "remark-cli": "^9.0.0",
    "typograf": "^6.11.3"
  },
  "remarkConfig": {
    "plugins": [
      [
        "@mavrin/remark-typograf",
        {
          "locale": [
            "ru"
          ]
        }
      ]
    ]
  }
}

```
index.js
```.js
const { remarkTypograf } = require("./remark-typograf");

module.exports = remarkTypograf;

```
jest.config.js
```.js
module.exports = {
  testEnvironment: "node",
  testRunner: "jest-circus/runner",
};

```
package.json
```.json
{
  "name": "@mavrin/remark-typograf",
  "version": "2.1.6",
  "description": "Plugin for remark to make your typography better with typograf",
  "main": "index.js",
  "files": [
    "index.js",
    "remark-typograf.js"
  ],
  "scripts": {
    "test": "jest",
    "lint": "eslint .",
    "generate:site": "node ./scripts/generate.js",
    "publish:site": "npm run generate:site && node ./scripts/publishSite.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Mavrin/remark-typograf.git"
  },
  "keywords": [
    "unified",
    "remark",
    "remark-plugin",
    "plugin",
    "mdast",
    "markdown",
    "typograf",
    "text",
    "typography",
    "typographic"
  ],
  "author": "Konstantin Krivlenia <krivlenia@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Mavrin/remark-typograf/issues"
  },
  "homepage": "https://github.com/Mavrin/remark-typograf#readme",
  "dependencies": {
    "lodash.escaperegexp": "^4.1.2",
    "typograf": "^6.11.3",
    "unist-util-visit": "^2.0.3"
  },
  "devDependencies": {
    "eslint": "^7.24.0",
    "eslint-plugin-jest": "^24.3.4",
    "gh-pages": "^5.0.0",
    "husky": "^6.0.0",
    "jest": "^26.6.3",
    "jest-circus": "^26.6.3",
    "prettier": "^2.2.1",
    "pretty-quick": "^3.1.0",
    "remark": "13.0.0",
    "remark-gfm": "1.0.0",
    "remark-html": "^13.0.1",
    "remark-parse": "^9.0.0",
    "remark-stringify": "^9.0.1",
    "unified": "^9.2.1"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  }
}

```
remark-typograf.js
```.js
const visit = require("unist-util-visit");
const Typograf = require("typograf");
const escapeRegexp = require("lodash.escaperegexp");

function remarkTypograf(config = {}) {
  let { typograf, builtIn = true, keywords = [], ...typografConfig } = config;

  if (!typograf && builtIn === false) {
    throw new Error(
      "Typograf option should be specified. Please pass instance typograf as option or set builtIn to true"
    );
  }

  if (typograf && builtIn === true) {
    throw new Error(
      "`builtIn` option is true and `typograf` also is passed. Please set `builtIn` to false or clean `typograf` option"
    );
  }

  if (
    builtIn === true &&
    typografConfig.locale &&
    !Array.isArray(typografConfig.locale)
  ) {
    throw new Error(
      `Locale config should be array of string. e.g. {"locale": ["ru"]}`
    );
  }

  if (
    builtIn === true &&
    !Array.isArray(typografConfig && typografConfig.locale)
  ) {
    typografConfig.locale = ["ru"];
  }

  if (!typograf) {
    typograf = new Typograf(typografConfig);
  }

  function getTextNodes(tree) {
    const textNodes = [];
    if (tree.type === "inlineCode") {
      textNodes.push("`" + tree.value + "`");
      return textNodes;
    }
    if (typeof tree.value === "string") {
      textNodes.push(tree.value);
      return textNodes;
    }
    visit(tree, "inlineCode", (node) => {
      textNodes.push("`" + node.value + "`");
    });
    visit(tree, "text", (node) => {
      textNodes.push(node.value);
    });
    return textNodes;
  }

  function getLeftSiblingText(index, children) {
    const textNodes = getTextNodes(children[index - 1]);
    return typograf.execute(textNodes.pop() || "");
  }

  function getRightSiblingText(index, children) {
    const textNodes = getTextNodes(children[index + 1]);
    return typograf.execute(textNodes.shift() || "");
  }

  function applyTypograf(text, index, parent) {
    if (index === 0 && parent.children.length > 1) {
      const rightText = getRightSiblingText(index, parent.children);
      const typografedText = typograf.execute(text + rightText);
      return typografedText.substring(
        0,
        typografedText.length - rightText.length
      );
    }
    if (index === parent.children.length - 1 && parent.children.length > 1) {
      const leftText = getLeftSiblingText(index, parent.children);
      const typografedText = typograf.execute(leftText + text);
      return typografedText.substring(
        leftText.length,
        typografedText.length + leftText.length
      );
    }
    if (parent.children.length > 1) {
      const leftText = getLeftSiblingText(index, parent.children);
      const rightText = getRightSiblingText(index, parent.children);
      const typografedText = typograf.execute(leftText + text + rightText);
      return typografedText.substring(
        leftText.length,
        typografedText.length - rightText.length
      );
    }
    return typograf.execute(text);
  }

  function visitor(node, index, parent) {
    let text = node.value;

    keywords.forEach((keyword) => {
      const hex = Buffer.from(keyword).toString("hex");
      const regExp = new RegExp(`${escapeRegexp(keyword)}`, `g`);
      text = text.replace(regExp, hex);
    });

    text = applyTypograf(text, index, parent);

    keywords.forEach((keyword) => {
      const hex = Buffer.from(keyword).toString("hex");
      const regExp = new RegExp(`${escapeRegexp(hex)}`, `g`);
      text = text.replace(regExp, keyword);
    });

    node.value = text;
  }

  function transform(tree) {
    visit(tree, "text", visitor);
  }

  return transform;
}

module.exports = {
  remarkTypograf,
};

```
remark-typograf.test.js
```.js
const { describe, it, expect } = require("@jest/globals");
const remarkTypograf = require("./index");
const Typograf = require("typograf");
const remark = require("remark");
const gfm = require("remark-gfm");

function getRemark() {
  return remark().data(`settings`, { bullet: `-`, emphasis: `_` });
}

describe("remarkjs typograf", () => {
  it("should throw error if typofraf is not specified", () => {
    expect(() => remarkTypograf({ builtIn: false })).toThrow(/Typograf/);
  });

  it("should throw error if typofraf is specified and builtIn true", () => {
    expect(() =>
      remarkTypograf({
        typograf: new Typograf({ locale: ["en-US"] }),
        builtIn: true,
      })
    ).toThrow(/`builtIn` option is true and `typograf` also is passed/);
  });

  it("should throw error if locale is not array", () => {
    expect(() => remarkTypograf({ locale: "en" })).toThrow(
      /Locale config should be array of string/
    );
  });

  it("Should work with explicit typograf", () => {
    expect(
      getRemark()
        .use(remarkTypograf, {
          typograf: new Typograf({ locale: ["en-US"] }),
          builtIn: false,
        })
        .processSync("## spread operator... end . Some test.\n")
        .toString()
    ).toEqual("## spread operator… end. Some test.\n");
  });

  it("Should apply with default config", () => {
    expect(
      getRemark()
        .use(remarkTypograf)
        .processSync("## spread operator... end . Some test.\n")
        .toString()
    ).toEqual("## spread operator… end. Some test.\n");
  });

  it("Should apply", () => {
    expect(
      getRemark()
        .use(remarkTypograf, { locale: ["en-US"] })
        .processSync("## spread operator... end . Some test.\n")
        .toString()
    ).toEqual("## spread operator… end. Some test.\n");
  });

  it("should apply keywords config", () => {
    const result = getRemark()
      .use(gfm)
      .use(remarkTypograf, {
        keywords: [":(", "TL;DR"],
      })
      .processSync(`## 1. Это сложно :(.\nSome test. :( "TL;DR" operator... :(`)
      .toString();
    expect(result).toEqual(
      "## 1. Это сложно :(.\n\nSome test. :( «TL;DR» operator… :(\n"
    );
  });

  it("Should apply default locale", () => {
    expect(
      getRemark()
        .use(remarkTypograf, {})
        .processSync("## spread operator... end . Some test.\n")
        .toString()
    ).toEqual("## spread operator… end. Some test.\n");
  });

  it("Should handle for code block", () => {
    const result = getRemark()
      .use(remarkTypograf, { locale: ["ru"] })
      .processSync(
        "value - some code...\n```js\nconst value = [...[1,3]];\n```"
      )
      .toString();
    expect(result).toEqual(
      "value — some code…\n\n```js\nconst value = [...[1,3]];\n```\n"
    );
  });

  it("Should handle for backtick", () => {
    const result = getRemark()
      .use(remarkTypograf, { locale: ["ru"] })
      .processSync("some... `:tick tick...` some... test `.test` test .")
      .toString();
    expect(result).toEqual("some… `:tick tick...` some… test `.test` test.\n");
  });

  it("Should handle list", () => {
    const result = getRemark()
      .use(remarkTypograf, { locale: ["ru"] })
      .processSync("# header\n - one point...\n - second point\n")
      .toString();
    expect(result).toEqual("# header\n\n-   one point…\n-   second point\n");
  });

  it("Should handle inline block type", () => {
    const result = getRemark()
      .use(gfm)
      .use(remarkTypograf, { locale: ["ru"] })
      .processSync(
        "_Italic..._ some... **bold...** **bold** . New code [link...](https://github.com) sentence , ~~во внимание~~\n"
      )
      .toString();
    expect(result).toEqual(
      "_Italic…_ some… **bold…** **bold**. New code [link…](https://github.com) sentence, ~~во внимание~~\n"
    );
  });

  it("Should not trim space after comma if next word is inline code link", () => {
    const result = getRemark()
      .use(remarkTypograf, { locale: ["ru"] })
      .processSync(
        "Привет, [как]()дела. Привет, [`как`]()дела. Привет, [_как_]()дела.\n"
      )
      .toString();
    expect(result).toEqual(
      "Привет, [как]()дела. Привет, [`как`]()дела. Привет, [_как_]()дела.\n"
    );
  })

  it("Should mark and punctuation", () => {
    const result = getRemark()
      .use(remarkTypograf, { locale: ["ru"] })
      .processSync(
        "проверить секцию **Categories,** а у родительского тега. Далее — история создания онлайн-инструмента **[Can I Include](https://caninclude.glitch.me/).**\n"
      )
      .toString();
    expect(result).toEqual(
      "проверить секцию **Categories,** а у родительского тега. Далее — история создания онлайн-инструмента **[Can I Include](https://caninclude.glitch.me/).**\n"
    );
  });

  it("Should handle bullet list", () => {
    const result = getRemark()
      .use(remarkTypograf, { locale: ["ru"] })
      .processSync("list:\n- one item\n- В простом случае,\n- two item")
      .toString();
    expect(result).toEqual(
      "list:\n\n-   one item\n-   В простом случае,\n-   two item\n"
    );
  });
});

```
scripts/before.md
---
title: "Принять во внимание воздействие фактора"
tags:
  - почво
  - ведение
false: true
---

# Принять во внимание воздействие фактора

В связи с этим нужно подчеркнуть, что [липкость](https://yandex.ru/referats/) возникает агробиогеоценоз. Коллембола нагревает желтозём одинаково по всем направлениям. Поверхность раздела фаз притягивает гумус.

```html
<button
  class="button
    button_theme_normal
    button_size_s
    referats__write
    referats__more
    i-bem button_js_inited"
  type="button"
  autocomplete="off"
>
  <span class="button__text">
    Ещё не
  </span>
</button>
```

В условиях очагового земледелия аллювий — разрушаем. В первом приближении функция влагопроводности нейтрализует `<foo bar="baz">`.

    .topics__item {
      display: block;
      margin-top: 14px
    }

Реология, как того требуют законы термодинамики, едва ли квантуема. В ходе валового анализа аржиллана инструментально обнаружима.

Цветность растворяет фраджипэн:

- Уровень грунтовых вод
  - Массоперенос
  - Их охлаждает
  - Горизонт
- Вызывает аллювий

Гуминовая кислота пространственно притягивает многофазный суглинок. В первом приближении обеднение окисляет гумин.

scripts/generate.js
```.js
const path = require("path");
const fs = require("fs");
const remark = require("remark");
const unified = require("unified");
const markdown = require("remark-parse");
const Typograf = require("typograf");
const remarkStringify = require("remark-stringify");
const remarkHtml = require("remark-html");
const remarkjsTypograf = require("../index");

const deleteFolderRecursive = function (folderPath) {
  if (fs.existsSync(folderPath)) {
    fs.readdirSync(folderPath).forEach((file) => {
      const curPath = path.join(folderPath, file);
      if (fs.lstatSync(curPath).isDirectory()) {
        // recurse
        deleteFolderRecursive(curPath);
      } else {
        // delete file
        fs.unlinkSync(curPath);
      }
    });
    fs.rmdirSync(folderPath);
  }
};

const distPath = path.resolve(__dirname, "../dist");
const originalMarkdown = fs.readFileSync(
  path.resolve(__dirname, "./before.md"),
  "utf8"
);

const markdownResultWithTypograf = unified()
  .use(markdown, { commonmark: true })
  .use(remarkjsTypograf, {
    typograf: new Typograf({ locale: ["ru"] }),
    builtIn: false,
  })
  .use(remarkStringify, {
    gfm: true,
    listItemIndent: "1",
    rule: "-",
    ruleSpaces: false,
  })
  .processSync(originalMarkdown).toString();

const htmlResultWithTypograf = remark()
  .use(remarkjsTypograf, {
    typograf: new Typograf({ locale: ["ru"] }),
    builtIn: false,
  })
  .use(remarkHtml)
  .processSync(originalMarkdown);

const htmlResultWithoutTypograf = remark()
  .use(remarkHtml)
  .processSync(originalMarkdown);

deleteFolderRecursive(distPath);
fs.mkdirSync(distPath);
fs.writeFileSync(
  path.resolve(path.join(distPath, "before.md")),
  originalMarkdown,
  "utf8"
);

fs.writeFileSync(
  path.resolve(path.join(distPath, "after.md")),
  markdownResultWithTypograf,
  "utf8"
);

const html = `
<html lang="ru">
<head>
  <title>remark-typograf plugin example</title>
  <meta charset="UTF-8">
  <style>
    body > div.example {
      float: left;
      width: 50%;
    }
  </style>
</head>
  <body>
    <div>
        <a href="https://github.com/Mavrin/remarkjs-typograf">Source code on github</a>
    </div>
    <div class="example">
        <h2>Before (<a target="_blank" href="https://github.com/Mavrin/remarkjs-typograf/blob/gh-pages/after.md">markdown source</a>):</h2>
        <div>${htmlResultWithoutTypograf}</div>
    </div>
    <div class="example">
       <h2>After (<a target="_blank" href="https://github.com/Mavrin/remarkjs-typograf/blob/gh-pages/after.md">markdown source</a>):</h2>
       <div>${htmlResultWithTypograf}</div>
    </div>
  </body>
</html>
`;

fs.writeFileSync(
  path.resolve(path.join(distPath, "index.html")),
  html.trim(),
  "utf8"
);

```
scripts/publishSite.js
```.js
const ghpages = require("gh-pages");
const { resolve } = require("path");
const resolvePath = (relativePath) => resolve(__dirname, relativePath);

const build = resolvePath("../dist");

async function publish() {
  return new Promise((resolve, reject) => {
    ghpages.publish(
      build,
      {
        branch: "gh-pages",
      },
      function (err) {
        if (err) {
          reject(err);
        } else {
          resolve();
        }
      }
    );
  });
}

publish()
  .then(() => console.log("publish to gh-pages branch success"))
  .catch((err) => {
    console.log("could not publish to gh-pages branch", err);
  });

```


